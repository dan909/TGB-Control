'CR1000 Series
'Created by Danny Awty-Carroll (dga1@aber.ac.uk)

Public PID As Boolean = false ' this is false if bang bang control is used and true if a proportional integral derivative control shoud be used



'Declare Public Variables
Public PTemp, batt_volt
Public PTemp_C
Public Counter
Public OutString As String * 1000
Public InString As String * 1000
Public GMT(9)	'real time clock
Public SetLR(2) As Float
Public EndLR(2) As Float

Public MeanTempLR(2)  As Float
Public TempDifLR(2)  As Float

Public A2 As Float
Public A8 As Float
Public A13 As Float
Public G2 As Float
Public G8 As Float
Public G13 As Float
Public Q2 As Float
Public Q8 As Float
Public Q13 As Float

Alias GMT(4) = Hour
Alias GMT(5) = Minute
Alias GMT(6) = Second
Alias GMT(9) = UK_DOY

Public HeatLeft As Boolean
Public HeatRight As Boolean

Units EndLR(1)=Deg C
Units EndLR(2)=Deg C

Units A2=Deg C
Units A8=Deg C
Units A13=Deg C
Units G2=Deg C
Units G8=Deg C
Units G13=Deg C
Units Q2=Deg C
Units Q8=Deg C
Units Q13=Deg C

Units PTemp_C=Deg C


Const ON = 1
Const OFF = 0


'Define Data Tables
DataTable (Test,1,-1)
    DataInterval (0,15,Sec,10)
    Minimum (1,batt_volt,FP2,0,False)
    Sample (1,PTemp,FP2)
    Sample (1,OutString,String)
    Average(1,EndLR(1),FP2,False)
	  Average(1,EndLR(2),FP2,False)
    Average(1,A2,FP2,False)
	  Average(1,A8,FP2,False)
	  Average(1,A13,FP2,False)
    Average(1,G2,FP2,False)
	  Average(1,G8,FP2,False)
	  Average(1,G13,FP2,False)
	  Average(1,Q2,FP2,False)
	  Average(1,Q8,FP2,False)
	  Average(1,Q13,FP2,False)
EndTable

 

'Main Program
BeginProg

    'Set up communication ports to send and receive data
    'jumper wire from C1 (COM1 TX) and C2 (COM1 RX) to Arduino
    SerialOpen (Com1,9600,16,5,10000)
    SerialFlush(Com1)
    

    Scan (5,Sec,0,0)
      RealTime(GMT())
      PanelTemp (PTemp,250)
      Battery (batt_volt)

      Counter = Counter + 1
      OutString = ((Hour*4) + Floor(Minute/15)) + "/"

      'Send String over communication port C1 (COM1 TX).
      SerialOut(Com1,OutString,"",0,100)
      'Receive String over communication port C2 (COM1 RX).
      SerialIn(InString,Com1,150,0,16)
      SerialFlush(Com1)

      If Len(InString) > 5 Then
        SplitStr(SetLR(1),InString,"RL=",2,0)
      EndIf
      
      PanelTemp(PTemp_C,_60Hz)
      TCDiff(EndLR(),2,mV2_5,1,TypeT,PTemp_C,True ,0,250,1.0,0)
      TCSe(A2,1,mV2_5,5,TypeT,PTemp_C,False,0,250,1.0,0)
      TCSe(A8,1,mV2_5,6,TypeT,PTemp_C,False,0,250,1.0,0)
      TCSe(A13,1,mV2_5,7,TypeT,PTemp_C,False,0,250,1.0,0)
      TCSe(G2,1,mV2_5,8,TypeT,PTemp_C,False,0,250,1.0,0)
      TCSe(G8,1,mV2_5,9,TypeT,PTemp_C,False,0,250,1.0,0)
      TCSe(G13,1,mV2_5,10,TypeT,PTemp_C,False,0,250,1.0,0)
      TCSe(Q2,1,mV2_5,11,TypeT,PTemp_C,False,0,250,1.0,0)
      TCSe(Q8,1,mV2_5,12,TypeT,PTemp_C,False,0,250,1.0,0)
      TCSe(Q13,1,mV2_5,13,TypeT,PTemp_C,False,0,250,1.0,0)
      
      
      
      If(PID) Then
        MeanTempLR(1) = (A2 + A8 + A13)/3
        MeanTempLR(2) = (Q2 + Q8 + Q13)/3
        
        If(EndLR(1) < MeanTempLR(1)) Then
          HeatLeft = ON
        Else
          HeatLeft = OFF
        EndIf
        
        If(EndLR(2) < MeanTempLR(2)) Then
          HeatRight = ON
        Else
          HeatRight = OFF
        EndIf

        PortSet(4, HeatLeft)
        PortSet(5, HeatRight)
        
        
      Else
        If(EndLR(1) < SetLR(1)) Then
          HeatLeft = ON
        Else
          HeatLeft = OFF
        EndIf
        
        If(EndLR(2) < SetLR(2)) Then
          HeatRight = ON
        Else
          HeatRight = OFF
        EndIf
      
        PortSet(4, HeatLeft)
        PortSet(5, HeatRight)
      EndIf
      
      

      

      'Call Output Tables
      CallTable Test
    NextScan
    
EndProg

